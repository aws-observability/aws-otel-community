name: "Integration Test"

on:
  push:
    branches: [ main ]
  workflow_dispatch:
     inputs:
      push: 
        description: 'Should workflow push sample app docker image'
        type: boolean
        required: true

jobs:
  publish_and_test_app:
    name: Build and test sample app
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        app-platform: [ javascript-sample-app ]
    env:
      APP_PATH: sample-apps/${{ matrix.app-platform }}
    steps:
      - name: Checkout This Repo
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: us-west-2
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Construct Sample App image tag
        run: |
          echo "APP_IMAGE=ghcr.io/${{ github.repository }}/sample-app-${{ matrix.app-platform }}:${{ github.sha }}" | tee --append $GITHUB_ENV;
      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event.inputs.push == 'true' || 
            ( github.event_name == 'push' && github.ref == 'refs/heads/main' )
            }}
          context: ${{ env.APP_PATH }}
          tags: |
            ${{ env.APP_IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Run test containers
        run: docker-compose up --abort-on-container-exit
        working-directory: .github/collector
        env:
          INSTANCE_ID: ${{ github.run_id }}-${{ github.run_number }}
          LISTEN_ADDRESS: 0.0.0.0:8080
          APP_IMAGE: ${{ env.APP_IMAGE }}
          VALIDATOR_COMMAND: -c standard-otel-trace-metric-validation.yml --endpoint http://app:8080 --metric-namespace default -t ${{ github.run_id }}-${{ github.run_number }} --language javascript